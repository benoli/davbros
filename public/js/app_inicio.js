/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/app_inicio.js":
/*!************************************!*\
  !*** ./resources/js/app_inicio.js ***!
  \************************************/
/***/ (() => {

eval("// import './app_manager';\n// import { addObjectToQueue as addObjectOnQueue } from \"./app_manager\";\n// import { Clean } from \"./support_classes/clean_sideform\";\n// import { DB } from './support_classes/persist_data_frontend';\n// import { DNI } from './support_classes/dni';\n// const db = new DB();\n// const dni = new DNI();\n// const clean = new Clean();\n// // Fill the table with all planillas received\n// export const fillClientesTable = async(dataset)=> {\n//   var columnsSource = [{title:\"Apellido\"}, {title:\"Nombre\"}, {title:\"Celular\"}, {title:\"DNI\"}];\n//   var dataSource = dataset;\n//   var config = {scrollY:'70vh', \"scrollX\": true, scrollCollapse: true, paging: false, responsive: true, \"processing\": true, \"destroy\": true, \"order\": [[ 0, 'asc' ]], data: dataSource, columns: columnsSource, \"language\": {\n//     \"search\": \"Buscar:\"\n//       }\n//       , \"initComplete\": \n//       function () {\n//           let api = this.api();\n//           var table = this;\n//           api.$('tr').attr('title', 'Click sobre un cliente para ver más datos');\n//           api.$('tr').click( async function (event) {\n//               event.stopPropagation();\n//               let thisRow = this;\n//               var elem = document.getElementById('modal1');\n//               var instance = M.Modal.init(elem, \n//                 {onOpenEnd:async()=>{\n//                   document.getElementById('change-client').addEventListener('click', initChangeClient);\n//                   document.getElementById('delete-client').addEventListener('click', proxyDeleteClient)\n//                 }},\n//                 {onCloseEnd:()=>{\n//                   document.getElementById('delete-client').removeEventListener('click', proxyDeleteClient); // Detach to improve the performance\n//                   document.getElementById('change-client').removeEventListener('click', initChangeClient); // Detach to improve the performance\n//                   let elem = document.querySelector('.modal');while (elem.firstChild) {elem.removeChild(elem.firstChild)\n//                   }}});\n//               let rowSelected = api.row(thisRow).data(); // Read data of row selected\n//               let userDataTemplate =     \n//               `<div class=\"modal-content\">\n//                  <h4>Cliente: ${rowSelected[0]}, ${rowSelected[1]}</h4>\n//                  <p>Teléfono: ${rowSelected[2]}</p>\n//               </div>\n//               <div class=\"modal-footer\">\n//                 <button class=\"modal-close waves-effect btn-small\">Salir</button>\n//                 <button class=\"waves-effect btn-small red\" data-id=\"${rowSelected[4]}\" id=\"delete-client\">Borrar</button>\n//                 <button class=\"waves-effect btn-small blue\" data-id=\"${rowSelected[4]}\" id=\"change-client\">Modificar</button>\n//               </div>`;\n//               elem.innerHTML = userDataTemplate;\n//               instance.open();\n//               console.log(rowSelected);\n//           } );\n//           //api.$('tr').click(evaluateClicks);\n//           // Here atach tooltip onmouseover\n//       } \n//   };\n//   $('#clientes').DataTable(config);\n// }\n// const initChangeClient = async(event)=>{\n//     let id = event.target.dataset.id;\n//     let client = await db.getSingleDoc(id);\n//     let modal = document.getElementById('modal1');\n//     let instanceModal = M.Modal.getInstance(modal);\n//     instanceModal.close(); \n//     let sideForm = document.querySelector('.side-form');\n//     let instance = M.Sidenav.getInstance(sideForm);\n//     let keysToSet = ['name', 'lastname', 'dni', 'fecha_nac', 'sex', 'email', 'address', 'phone', 'alternative_phone', 'tipo'];\n//     instance.open();\n//     for await (const [key, value] of Object.entries(client)){\n//       // console.log(`${key} => ${value}`);\n//       if (keysToSet.includes(key)) {\n//         if (key != 'tipo') {\n//           let input = sideForm.querySelector(`input[name=${key}]`);\n//           input.value = value;\n//         }\n//         else{\n//           await fillClientTipoOnDropdown(value);\n//         }\n//       }\n//     }\n//     await setFormHeader('Modificar');\n//     // \n// }\n// // Delete client from local DB & put the action on queue\n// const deleteClient = async(event)=>{\n//   try {\n//     let client = await db.getSingleDoc(event.target.dataset.id);\n//     await db.removeSingleDoc(event.target.dataset.id);\n//     // Add deleted doc to queue\n//     // Set fields needed for queue\n//     client.saved = false;\n//     client.action = 'DELETE';\n//     // Add object to queue\n//     console.log('ADD next object to Queue');\n//     console.log(client);\n//     await addObjectOnQueue(client);\n//   } catch (error) {\n//     console.log(`Error on delete ${error}`);\n//   }\n//   // Need to check if doc deleted still on queue since his creation. Otherwise it's gona POST it first and then it's gona DELETE it on the same queue\n//   await showClientes();\n//   let instance = M.Modal.getInstance(event.target.parentElement.parentElement);\n//   instance.close();\n//   M.toast({html: `Cliente Eliminado`});\n// }\n// // Trap to display a confirmation modal. If interaction is positive forward the call to original handler \n// // This need a refactor because is not removing the event listener \n// const acceptToContinue = {\n//   apply: function(target, thisArg, argumentsList) {\n//     let modal = document.getElementById('modal-confirm');\n//     console.log(modal);\n//     let instance = M.Modal.init(modal);\n//     instance.open();\n//     modal.querySelector('.modal-footer .red').addEventListener('click', async(event)=>{\n//         event.preventDefault();\n//         return Reflect.apply(...arguments);\n//     });\n//   }\n// }\n// // Create a proxy to handle the confirmation of client delete\n// const proxyDeleteClient = new Proxy(deleteClient, acceptToContinue)\n// const redrawClientsUI= async(set)=> {\n//   let filteredSet = [];\n//   for await (const client of set){\n//     let clientData = [];\n//       clientData.push(client.lastname);\n//       clientData.push(client.name);\n//       clientData.push(client.phone);\n//       clientData.push(client.dni);\n//       clientData.push(client._id); // #3 Keep track of this\n//       filteredSet.push(clientData);\n//   };\n//     console.log(set);\n//     console.log(filteredSet);\n//     await fillClientesTable(filteredSet);\n// }\n// // Load clients on table on page load\n// const showClientes = async ()=> {\n//     let clients = await db.getClientes();\n//     // console.log('CLIENTS on CLientes');\n//     // console.log(clients);\n//     // throw new Error('Error');\n//     await redrawClientsUI(clients);\n//     //await db.deleteAllDocs(); //THIS IS DANGEROUS\n//   }\n// const atachScanners = async()=>{\n//   // If device is mobile. Delete button scanner\n//     document.getElementById('scanner').addEventListener('click', dni.scan);\n//     document.getElementById('camera').addEventListener('click', dni.camera);\n// }\n// const setFormHeader = async(context)=>{\n//   let sideForm = document.querySelector('.side-form');\n//   let i = context == 'Nuevo'?`<i class=\"right material-icons\">person_add</i>`:`<i class=\"right material-icons\">edit</i>`;\n//   sideForm.querySelector('form h6').innerHTML = `${context} Cliente ${i}`;\n// }\n// const cleanSideform = async()=>{\n//   await clean.basicClean();\n//   await dni.removePulse();\n//   await setFormHeader('Nuevo');\n// }\n// // Clean form fields when user has the intention to create a new client\n// const atachCleanerToAddBtn = async()=>{\n//   document.querySelector(\".btn-floating.btn-small.btn-large.add-btn.sidenav-trigger\").addEventListener('click', cleanSideform);\n// }\n// // I need to refactor the validations on this function\n// const addClient = async(event)=>{\n//   event.preventDefault();\n//   let client ={};\n//   const fieldsToValidate = ['email', 'dni']\n//   const fieldsRequired = ['name', 'lastname', 'dni', 'fecha_nac', 'sex', 'email', 'address', 'phone', 'alternative_phone'];\n//   let inputs = document.querySelectorAll(\"#form-add-cliente input\");\n//   for await (const input of inputs){\n//       while (input.parentElement.contains(input.parentElement.querySelector('small'))) {\n//         input.parentElement.querySelector('small').remove();\n//       } \n//       // Here validate if client already exists\n//       if (fieldsToValidate.includes(input.name)) {\n//         if (await db.docExists(input.name, input.value)) {\n//             // REturn validation messsage and avoid save\n//             let small = document.createElement('small');\n//             small.style = \"color:red;\";\n//             small.innerText = `Ya existe un usuario con ${input.name} ${input.value}`;\n//             input.insertAdjacentElement('afterend', small);\n//             M.toast({html: `Ya existe un usuario con ${input.name} ${input.value}`});\n//             return;\n//         }\n//       }\n//       if (fieldsRequired.includes(input.name)) {\n//         console.log(`Lenght of value for ${input.name} ==> ${input.value.length}`);\n//         if (input.value.length < 3) {\n//           // REturn validation messsage and avoid save\n//           let small = document.createElement('small');\n//           small.style = \"color:red;\";\n//           small.innerText = `${input.name} es un campo obligatorio y debe contener información  correcta`;\n//           input.insertAdjacentElement('afterend', small);\n//           M.toast({html: `${input.name} es un campo obligatorio y debe contener información  correcta`});\n//           return;\n//         }\n//       }\n//       if (input.className == 'select-dropdown dropdown-trigger') {\n//         continue;\n//       }\n//       client[input.name] = input.value;\n//   }\n//   let select = document.getElementById('select-tipo');\n//   client.type = 'CLIENT';\n//   client.user_id = '';\n//   client.tipo = select.value;\n//   // First save on pouch local Db\n//   let response = await db.saveSingleDoc(client);\n//   if (response.ok) {\n//     await showClientes();\n//     // Clean everything\n//     let sidenav = document.querySelector('#side-form');\n//     sidenav.dataset.canclose = 'true';\n//     let instance = M.Sidenav.getInstance(sidenav);\n//     instance.close();\n//     await cleanSideform();\n//     M.toast({html: `Nuevo cliente creado`});\n//     // Set fields needed for queue\n//     client.saved = false;\n//     client.action = 'POST';\n//     client._id = response.id;\n//     // Add object to queue\n//     await addObjectOnQueue(client);\n//   }\n// }\n// const atachAddClient = async()=>{\n//   document.getElementById('add-user').addEventListener('click', addClient);\n// }\n// const fillClientTipoOnDropdown = async (tipoSelected=false)=>{\n//   let tipos = ['Final', 'Intermedio'];\n//   let select = document.getElementById('select-tipo');\n//   try {\n//     while (select.firstChild) {select.removeChild(select.firstChild)};\n//     let oldInstance = M.FormSelect.getInstance(select);\n//     oldInstance.destroy();\n//   } catch (error) {\n//     console.log(error);\n//   }\n//   for await (const tipo of tipos){\n//       let option = document.createElement('option');\n//       option.innerText = tipo;\n//       option.value = tipo;\n//       if (tipoSelected == tipo) {\n//         option.setAttribute(\"selected\", \"selected\");\n//         select.value = tipo;\n//       }\n//       select.appendChild(option);\n//   };\n//   let elem = document.getElementById('select-tipo');\n//   let instance = M.FormSelect.init(elem);\n// }\n// // window.addEventListener('load', async()=>{\n// //     await showClientes();\n// //     await atachScanners();\n// //     await clean.inputs();\n// //     await atachCleanerToAddBtn();\n// //     await atachAddClient();\n// //     await fillClientTipoOnDropdown();\n// // });\n// // HELPER FUNCTIONS\n// // This is for show the scanner button only if device != mobile\n// const checkDeviceType = async()=>{\n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/app_inicio.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/app_inicio.js"]();
/******/ 	
/******/ })()
;